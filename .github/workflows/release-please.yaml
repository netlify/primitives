name: release-please
on:
  push:
    branches:
      - main
jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    steps:
      - uses: navikt/github-app-token-generator@793caf0d755fb4d6e88150825f680f188535cb48
        id: get-token
        with:
          private-key: ${{ secrets.TOKENS_PRIVATE_KEY }}
          app-id: ${{ secrets.TOKENS_APP_ID }}
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ steps.get-token.outputs.token }}
      - name: Get PR branch name
        id: get-pr-branch
        run: |
          if [ -n "${{ steps.release.outputs.pr }}" ]; then
            echo "branch=$(echo -n '${{ steps.release.outputs.pr }}' | jq -r '.headBranchName')"  >> "$GITHUB_OUTPUT"
          else
            echo 'branch=' >> "$GITHUB_OUTPUT"
          fi
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.releases_created }}
        with:
          token: ${{ steps.get-token.outputs.token }}
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.prs_created }}
        with:
          ref: "release-please--branches--main"
          token: ${{ steps.get-token.outputs.token }}
      # Generates the release-please manifest file with the version of each package.
      # For some reason, release-please is failing to handle this automatically, so
      # we need to do it ourselves.
      - run: npm version --workspaces --json | jq 'with_entries(select(.key | startswith("@netlify/")) | .key |= sub("^@netlify"; "packages"))' > .release-please-manifest.json && git add .release-please-manifest.json
        if: ${{ steps.release.outputs.prs_created }}
      - uses: stefanzweifel/git-auto-commit-action@v5
        env:
          GITHUB_TOKEN: ${{ steps.get-token.outputs.token }}
        with:
          commit_message: "Update .release-please-manifest.json"
        if: ${{ steps.release.outputs.prs_created }}
      - uses: actions/setup-node@v4
        with:
          node-version: '*'
          cache: 'npm'
          check-latest: true
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.releases_created }}
      - run: npm ci
        if: ${{ steps.release.outputs.releases_created }}        
      - run: npm publish packages/cache/ --access=public
        if: ${{ steps.release.outputs['packages/cache--release_created'] }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
