name: Build
on:
  # Ensure GitHub actions are not run twice for same commits
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
  merge_group:
jobs:
  test:
    if: "${{ !startsWith(github.head_ref, 'release-') }}"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        node-version: ['*']
        deno-version: ['v1.37.0', 'v1.44.4']
        include:
          - os: ubuntu-latest
            node-version: '18.14.0'
            deno-version: 'v1.44.4'
      fail-fast: false
    steps:
      # Increasing the maximum number of open files. See:
      # https://github.com/actions/virtual-environments/issues/268
      - name: Increase open file limit
        run: sudo ulimit -Sn 65536
        if: "${{ matrix.os == 'macOS-latest' }}"
      - run: git config --global core.symlinks true
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v4
      - name: Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno-version }}
      - name: Setup Deno dependencies
        run: deno cache https://deno.land/x/eszip@v0.55.2/eszip.ts
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build --workspaces=true
      - name: Tests
        run: npm run test --workspaces=true

  test-build:
    if: "${{ !startsWith(github.head_ref, 'release-') }}"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        node-version: ['*']
        install-command: ['npm ci']
        machine: ['0', '1', '2', '3', '4']
      fail-fast: false
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: setup pnpm/yarn
        run: corepack enable
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.44.4
      - name: Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Install dependencies
        run: ${{ matrix.install-command }}
      - name: Build workspaces
        run: npm run build --workspaces=true
      - name: Tests
        run: npm run test --workspaces=true
        env:
          # split tests across multiple machines
          CI_NODE_INDEX: ${{ matrix.machine }}
          CI_NODE_TOTAL: 4
      - name: Get test coverage flags
        id: test-coverage-flags
        # For windows we have to use $env:
        run: |-
          os=${{ matrix.os }}
          node=$(node --version)
          echo "os=${os/-latest/}" >> $GITHUB_OUTPUT
          echo "os=${os/-latest/}" >> $env:GITHUB_OUTPUT
          echo "node=node_${node/.*.*/}" >> $GITHUB_OUTPUT
          echo "node=node_${node/.*.*/}" >> $env:GITHUB_OUTPUT
        shell: bash

  lint:
    if: "${{ !startsWith(github.head_ref, 'release-') }}"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - run: git config --global core.symlinks true
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v4
      - name: Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build --workspaces=true
      - name: Publint
        run: npm run publint --workspaces=true --if-present
